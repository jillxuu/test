{"openapi":"3.0.3","info":{"title":"TMP API","version":"0.0.1"},"components":{"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer"}},"schemas":{}},"paths":{"/api/application":{"post":{"tags":["Get Started"],"description":"Create a new application to authorize the access to backend","responses":{"200":{"description":"Default Response"}}}},"/api/asset/upload":{"post":{"tags":["Get Started"],"description":"\nUpload multiple assets including metadata JSON and media files. cURL is a recommended alternative as this doc site doesn't work.\n\n    curl --request POST \\\n      --url <YOUR_BASE_URL>/api/asset/upload \\\n      --header 'Authorization: Bearer <YOUR_AUTH_TOKEN>' \\\n      --form 'metadata=@metadata1.json;type=application/json' \\\n      --form 'metadata=@metadata2.json;type=application/json' \\\n      --form 'file=@media1.png' \\\n      --form 'file=@media2.png'\n        ","responses":{"200":{"description":"Default Response"}}}},"/api/media/upload":{"post":{"tags":["Get Started"],"description":"\nUpload media file and retrieve its arweave and cdn uri. cURL is a recommended alternative as this doc site doesn't work.\n\n    curl --request POST \\\n      --url \"https://api-staging.testnet.aptoslabs.com/tmp/api/media/upload\" \\\n      --header \"Content-Type: multipart/form-data\" \\\n      --header \"Authorization: Bearer <YOUR_AUTH_TOKEN>\" \\\n      --form \"file=@media1.png\" \\\n      --form \"file=@media2.png\"\n          ","responses":{"200":{"description":"Default Response"}}}},"/api/collection/create":{"post":{"tags":["Get Started"],"description":"Create a new collection","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"uri":{"type":"string"},"royaltyNumerator":{"type":"number","description":"Numerator for calculating the royalty percentage. For example, if the royalty is 5%, the numerator would be 5."},"royaltyDenominator":{"type":"number","description":"Denominator for calculating the royalty percentage. For example, if the royalty is 5%, the denominator would be 100."},"properties":{"type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"boolean"},{"type":"array","items":{"type":"integer","minimum":0,"maximum":255}},{"type":"integer","minimum":0}]},"description":"An object of key value pairs representing each property for the token."},"shouldObfuscate":{"type":"boolean","default":false}},"required":["name","description","uri","properties"],"additionalProperties":false}}},"required":true},"responses":{"200":{"description":"Default Response"}}}},"/api/collection/address/{collectionAddress}":{"get":{"tags":["Read"],"description":"Get collection details using its address","parameters":[{"schema":{"type":"string"},"in":"path","name":"collectionAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/collection/creator/{creatorAddress}":{"get":{"tags":["Read"],"description":"Get all collections created by a specific address","parameters":[{"schema":{"type":"string","enum":["collection_id","last_transaction_timestamp"],"default":"last_transaction_timestamp"},"in":"query","name":"sortBy","required":false},{"schema":{"type":"string","enum":["asc","desc"],"default":"desc"},"in":"query","name":"sortOrder","required":false},{"schema":{"type":"number","minimum":1,"maximum":100,"default":100},"in":"query","name":"limit","required":false},{"schema":{"type":"number","minimum":0,"default":0},"in":"query","name":"offset","required":false},{"schema":{"type":"string"},"in":"path","name":"creatorAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/collection/owner/{ownerAddress}":{"get":{"tags":["Read"],"description":"Get all collections where the owner owns a token","parameters":[{"schema":{"type":"string","enum":["asc","desc"],"default":"desc"},"in":"query","name":"sortOrder","required":false},{"schema":{"type":"number","minimum":1,"maximum":100,"default":100},"in":"query","name":"limit","required":false},{"schema":{"type":"number","minimum":0,"default":0},"in":"query","name":"offset","required":false},{"schema":{"type":"string"},"in":"path","name":"ownerAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/collection/address/{collectionAddress}/owners":{"get":{"tags":["Read"],"description":"Get all the token owners in a collection","parameters":[{"schema":{"type":"string","enum":["asc","desc"],"default":"desc"},"in":"query","name":"sortOrder","required":false},{"schema":{"type":"number","minimum":1,"maximum":100,"default":100},"in":"query","name":"limit","required":false},{"schema":{"type":"number","minimum":0,"default":0},"in":"query","name":"offset","required":false},{"schema":{"type":"string"},"in":"path","name":"collectionAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/collection/update/{collectionAddress}":{"post":{"tags":["Other Transactions"],"description":"Update an existing collection","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"uri":{"type":"string"},"royaltyNumerator":{"type":"number"},"royaltyDenominator":{"type":"number"},"properties":{"type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"boolean"},{"type":"array","items":{"type":"integer","minimum":0,"maximum":255}},{"type":"integer","minimum":0}]},"description":"An object of key value pairs representing each property for the token."}},"required":["properties"],"additionalProperties":false}}},"required":true},"parameters":[{"schema":{"type":"string"},"in":"path","name":"collectionAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/collection/reveal/{collectionAddress}":{"post":{"tags":["Other Transactions"],"description":"Reveal obfuscated metadata for a specific collection using its address","parameters":[{"schema":{"type":"string"},"in":"path","name":"collectionAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/token/batch_mint/{collectionAddress}":{"post":{"tags":["Get Started"],"description":"Batch mint multiple tokens using the collection address","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"names":{"type":"array","items":{"type":"string"}},"uris":{"type":"array","items":{"type":"string"}},"descriptions":{"type":"array","items":{"type":"string"}},"properties":{"type":"array","items":{"type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"boolean"},{"type":"array","items":{"type":"integer","minimum":0,"maximum":255}},{"type":"integer","minimum":0}]}},"description":"An array of key value pairs representing each property for the tokens."},"to":{"type":"string"},"ungatedTransfer":{"type":"boolean","description":"A boolean indicating whether the tokens can be transferred without restrictions."},"shouldObfuscate":{"type":"boolean","default":false}},"required":["names","uris","descriptions","properties","to","ungatedTransfer"],"additionalProperties":false}}},"required":true},"parameters":[{"schema":{"type":"string"},"in":"path","name":"collectionAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/token/mint/{collectionAddress}":{"post":{"tags":["Get Started"],"description":"Mint single token using the collection address","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"uri":{"type":"string"},"description":{"type":"string"},"properties":{"type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"boolean"},{"type":"array","items":{"type":"integer","minimum":0,"maximum":255}},{"type":"integer","minimum":0}]},"description":"An object of key value pairs representing each property for the token."},"to":{"type":"string"},"ungatedTransfer":{"type":"boolean"},"shouldObfuscate":{"type":"boolean","default":false}},"required":["name","uri","description","properties","to","ungatedTransfer"],"additionalProperties":false}}},"required":true},"parameters":[{"schema":{"type":"string"},"in":"path","name":"collectionAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/token/transfer":{"post":{"tags":["Other Transactions"],"description":"Transfer a token to a new owner","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"tokenAddress":{"type":"string"},"to":{"type":"string","description":"The wallet address to transfer the token to"}},"required":["tokenAddress","to"],"additionalProperties":false}}},"required":true},"responses":{"200":{"description":"Default Response"}}}},"/api/token/update/{tokenAddress}":{"post":{"tags":["Other Transactions"],"description":"Update token details by token address","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","default":""},"description":{"type":"string","default":""},"uri":{"type":"string","default":""},"properties":{"type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"boolean"},{"type":"array","items":{"type":"integer","minimum":0,"maximum":255}},{"type":"integer","minimum":0}]},"description":"An object of key value pairs representing each property for the token."}},"required":["properties"],"additionalProperties":false}}},"required":true},"parameters":[{"schema":{"type":"string"},"in":"path","name":"tokenAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/token/all/{collectionAddress}":{"get":{"tags":["Read"],"description":"Retrieve all tokens within a specific collection by its address. Allows for optional filtering by owner address","parameters":[{"schema":{"type":"string"},"in":"query","name":"ownerAddress","required":false},{"schema":{"type":"string","enum":["token_data_id"],"default":"token_data_id"},"in":"query","name":"sortBy","required":false},{"schema":{"type":"string","enum":["asc","desc"],"default":"desc"},"in":"query","name":"sortOrder","required":false},{"schema":{"type":"number","minimum":1,"maximum":100,"default":100},"in":"query","name":"limit","required":false},{"schema":{"type":"number","minimum":0,"default":0},"in":"query","name":"offset","required":false},{"schema":{"type":"string"},"in":"path","name":"collectionAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/token/address/{tokenAddress}":{"get":{"tags":["Read"],"description":"Get token details using its address","parameters":[{"schema":{"type":"string"},"in":"path","name":"tokenAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/token/reveal/{tokenAddress}":{"post":{"tags":["Other Transactions"],"description":"Reveal obfuscated metadata for a specific token using its address","parameters":[{"schema":{"type":"string"},"in":"path","name":"tokenAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/token/burn/{tokenAddress}":{"post":{"tags":["Other Transactions"],"description":"Burn a token","parameters":[{"schema":{"type":"string"},"in":"path","name":"tokenAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}}},"servers":[{"url":"/tmp"}],"tags":[{"name":"Get Started","description":"Endpoints to initialize and set up the application. Start by creating an application, then upload medias and/or assets. Use the uploaded assets to create a collection, and finally, create tokens using the created collection and uploaded assets."},{"name":"Other Transactions","description":"Endpoints for performing various optional operations on tokens and collections."},{"name":"Read","description":"Endpoints to retrieve information about collections and tokens."}]}