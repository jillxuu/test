{"openapi":"3.0.3","info":{"title":"TMP API","description":"\n  ### Instructions:\n  <details open>\n    <summary><strong>Staging Environment</strong></summary>\n    <ol>\n      <li>Visit <a href=\"https://developers.staging.aptoslabs.com\">https://developers.staging.aptoslabs.com</a> and log in using your Google account. After logging in, create an app under <b>testnet</b> network to generate your API key.</li>\n      <li>On this page:\n        <ul>\n          <li>Set the base URL to <a href=\"https://api-staging.testnet.aptoslabs.com/tmp\">https://api-staging.testnet.aptoslabs.com/tmp</a></li>\n          <li>Copy the API key generated in Step 1 and paste it into the BEARER AUTHENTICATION (BEARERAUTH) field.</li>\n        </ul>\n      </li>\n      <li>Navigate to the <code>/api/application</code> endpoint under the <b>application</b> tab:\n        <ul>\n          <li>Set the Header to <code>Content-Type: application/json</code>, and click send. This action will create an application associated with your API key, authorizing your requests to access our TMP backend. The response will include an admin address, which you should store safely and fund this account to enable write operations with the TMP backend.</li>\n        </ul>\n      </li>\n    </ol>\n  </details>\n\n  <details>\n    <summary><strong>Production Environment</strong></summary>\n    <ol>\n      <li>Visit <a href=\"https://developers.aptoslabs.com\">https://developers.aptoslabs.com</a> and log in using your Google account. After logging in, create an app under <b>testnet</b> network to generate your API key.</li>\n      <li>On this page:\n        <ul>\n          <li>Set the base URL to <a href=\"https://api.testnet.aptoslabs.com/tmp\">https://api.testnet.aptoslabs.com/tmp</a></li>\n          <li>Copy the API key generated in Step 1 and paste it into the BEARER AUTHENTICATION (BEARERAUTH) field.</li>\n        </ul>\n      </li>\n      <li>Navigate to the <code>/api/application</code> endpoint under the <b>application</b> tab:\n        <ul>\n          <li>Set the Header to <code>Content-Type: application/json</code>, and click send. This action will create an application associated with your API key, authorizing your requests to access our TMP backend. The response will include an admin address, which you should store safely and fund this account to enable write operations with the TMP backend.</li>\n        </ul>\n      </li>\n    </ol>\n  </details>\n    ","version":"0.0.1"},"components":{"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer"}},"schemas":{}},"paths":{"/api/collection/create":{"post":{"tags":["collection"],"description":"Create a new collection","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"uri":{"type":"string"},"royaltyNumerator":{"type":"number","description":"Numerator for calculating the royalty percentage. For example, if the royalty is 5%, the numerator would be 5."},"royaltyDenominator":{"type":"number","description":"Denominator for calculating the royalty percentage. For example, if the royalty is 5%, the denominator would be 100."},"properties":{"type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"boolean"},{"type":"array","items":{"type":"integer","minimum":0,"maximum":255}},{"type":"integer","minimum":0}]},"description":"An object of key value pairs representing each property for the token."},"shouldObfuscate":{"type":"boolean","default":false}},"required":["name","description","uri","properties"],"additionalProperties":false}}},"required":true},"responses":{"200":{"description":"Default Response"}}}},"/api/collection/address/{collectionAddress}":{"get":{"tags":["collection"],"description":"Get collection details using its address","parameters":[{"schema":{"type":"string"},"in":"path","name":"collectionAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/collection/creator/{creatorAddress}":{"get":{"tags":["collection"],"description":"Get all collections created by a specific address","parameters":[{"schema":{"type":"string","enum":["collection_id","last_transaction_timestamp"],"default":"last_transaction_timestamp"},"in":"query","name":"sortBy","required":false},{"schema":{"type":"string","enum":["asc","desc"],"default":"desc"},"in":"query","name":"sortOrder","required":false},{"schema":{"type":"number","minimum":1,"maximum":100,"default":100},"in":"query","name":"limit","required":false},{"schema":{"type":"number","minimum":0,"default":0},"in":"query","name":"offset","required":false},{"schema":{"type":"string"},"in":"path","name":"creatorAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/collection/owner/{ownerAddress}":{"get":{"tags":["collection"],"description":"Get all collections where the owner owns a token","parameters":[{"schema":{"type":"string","enum":["asc","desc"],"default":"desc"},"in":"query","name":"sortOrder","required":false},{"schema":{"type":"number","minimum":1,"maximum":100,"default":100},"in":"query","name":"limit","required":false},{"schema":{"type":"number","minimum":0,"default":0},"in":"query","name":"offset","required":false},{"schema":{"type":"string"},"in":"path","name":"ownerAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/collection/address/{collectionAddress}/owners":{"get":{"tags":["collection"],"description":"Get all the token owners in a collection","parameters":[{"schema":{"type":"string","enum":["asc","desc"],"default":"desc"},"in":"query","name":"sortOrder","required":false},{"schema":{"type":"number","minimum":1,"maximum":100,"default":100},"in":"query","name":"limit","required":false},{"schema":{"type":"number","minimum":0,"default":0},"in":"query","name":"offset","required":false},{"schema":{"type":"string"},"in":"path","name":"collectionAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/collection/update/{collectionAddress}":{"post":{"tags":["collection"],"description":"Update an existing collection","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"uri":{"type":"string"},"royaltyNumerator":{"type":"number"},"royaltyDenominator":{"type":"number"},"properties":{"type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"boolean"},{"type":"array","items":{"type":"integer","minimum":0,"maximum":255}},{"type":"integer","minimum":0}]},"description":"An object of key value pairs representing each property for the token."}},"required":["properties"],"additionalProperties":false}}},"required":true},"parameters":[{"schema":{"type":"string"},"in":"path","name":"collectionAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/collection/reveal/{collectionAddress}":{"post":{"tags":["collection"],"description":"Reveal obfuscated metadata for a specific collection using its address","parameters":[{"schema":{"type":"string"},"in":"path","name":"collectionAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/token/batch_mint/{collectionAddress}":{"post":{"tags":["token"],"description":"Batch mint multiple tokens using the collection address","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"names":{"type":"array","items":{"type":"string"}},"uris":{"type":"array","items":{"type":"string"}},"descriptions":{"type":"array","items":{"type":"string"}},"properties":{"type":"array","items":{"type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"boolean"},{"type":"array","items":{"type":"integer","minimum":0,"maximum":255}},{"type":"integer","minimum":0}]}},"description":"An array of key value pairs representing each property for the tokens."},"to":{"type":"string"},"ungatedTransfer":{"type":"boolean","description":"A boolean indicating whether the tokens can be transferred without restrictions."},"shouldObfuscate":{"type":"boolean","default":false}},"required":["names","uris","descriptions","properties","to","ungatedTransfer"],"additionalProperties":false}}},"required":true},"parameters":[{"schema":{"type":"string"},"in":"path","name":"collectionAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/token/mint/{collectionAddress}":{"post":{"tags":["token"],"description":"Mint single token using the collection address","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"uri":{"type":"string"},"description":{"type":"string"},"properties":{"type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"boolean"},{"type":"array","items":{"type":"integer","minimum":0,"maximum":255}},{"type":"integer","minimum":0}]},"description":"An object of key value pairs representing each property for the token."},"to":{"type":"string"},"ungatedTransfer":{"type":"boolean"},"shouldObfuscate":{"type":"boolean","default":false}},"required":["name","uri","description","properties","to","ungatedTransfer"],"additionalProperties":false}}},"required":true},"parameters":[{"schema":{"type":"string"},"in":"path","name":"collectionAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/token/transfer":{"post":{"tags":["token"],"description":"Transfer a token to a new owner","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"tokenAddress":{"type":"string"},"to":{"type":"string","description":"The wallet address to transfer the token to"}},"required":["tokenAddress","to"],"additionalProperties":false}}},"required":true},"responses":{"200":{"description":"Default Response"}}}},"/api/token/update/{tokenAddress}":{"post":{"tags":["token"],"description":"Update token details by token address","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","default":""},"description":{"type":"string","default":""},"uri":{"type":"string","default":""},"properties":{"type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"boolean"},{"type":"array","items":{"type":"integer","minimum":0,"maximum":255}},{"type":"integer","minimum":0}]},"description":"An object of key value pairs representing each property for the token."}},"required":["properties"],"additionalProperties":false}}},"required":true},"parameters":[{"schema":{"type":"string"},"in":"path","name":"tokenAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/token/all/{collectionAddress}":{"get":{"tags":["token"],"description":"Retrieve all tokens within a specific collection by its address. Allows for optional filtering by owner address","parameters":[{"schema":{"type":"string"},"in":"query","name":"ownerAddress","required":false},{"schema":{"type":"string","enum":["token_data_id"],"default":"token_data_id"},"in":"query","name":"sortBy","required":false},{"schema":{"type":"string","enum":["asc","desc"],"default":"desc"},"in":"query","name":"sortOrder","required":false},{"schema":{"type":"number","minimum":1,"maximum":100,"default":100},"in":"query","name":"limit","required":false},{"schema":{"type":"number","minimum":0,"default":0},"in":"query","name":"offset","required":false},{"schema":{"type":"string"},"in":"path","name":"collectionAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/token/address/{tokenAddress}":{"get":{"tags":["token"],"description":"Get token details using its address","parameters":[{"schema":{"type":"string"},"in":"path","name":"tokenAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/token/reveal/{tokenAddress}":{"post":{"tags":["token"],"description":"Reveal obfuscated metadata for a specific token using its address","parameters":[{"schema":{"type":"string"},"in":"path","name":"tokenAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/token/burn/{tokenAddress}":{"post":{"tags":["token"],"description":"Burn a token","parameters":[{"schema":{"type":"string"},"in":"path","name":"tokenAddress","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/asset/upload":{"post":{"tags":["asset"],"description":"\nUpload multiple assets including metadata JSON and media files. cURL is a recommended alternative as this doc site doesn't work.\n\n    curl --request POST \\\n      --url <YOUR_BASE_URL>/api/asset/upload \\\n      --header 'Authorization: Bearer <YOUR_AUTH_TOKEN>' \\\n      --form 'metadata=@metadata1.json;type=application/json' \\\n      --form 'metadata=@metadata2.json;type=application/json' \\\n      --form 'file=@media1.png' \\\n      --form 'file=@media2.png'\n        ","responses":{"200":{"description":"Default Response"}}}},"/api/media/upload":{"post":{"tags":["asset"],"description":"\nUpload media file and retrieve its arweave and cdn uri. cURL is a recommended alternative as this doc site doesn't work.\n\n    curl --request POST \\\n      --url \"https://api-staging.testnet.aptoslabs.com/tmp/api/media/upload\" \\\n      --header \"Content-Type: multipart/form-data\" \\\n      --header \"Authorization: Bearer <YOUR_AUTH_TOKEN>\" \\\n      --form \"file=@media1.png\" \\\n      --form \"file=@media2.png\"\n          ","responses":{"200":{"description":"Default Response"}}}},"/api/application":{"post":{"tags":["application"],"description":"Create a new application to authorize the access to backend","responses":{"200":{"description":"Default Response"}}}}},"servers":[{"url":"https://api-staging.testnet.aptoslabs.com/tmp","description":"API Gateway Staging"},{"url":"https://api.aptoslabs.testnet.com/tmp","description":"API Gateway Production"}],"tags":[{"name":"collection","description":"Collection Management"},{"name":"token","description":"Token Management"},{"name":"application","description":"Application Management"},{"name":"account","description":"Account Management"},{"name":"asset","description":"Asset Management"}]}